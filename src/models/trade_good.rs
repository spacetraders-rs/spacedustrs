/*
 * SpaceTraders API
 *
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// TradeGood : A good that can be traded for other goods or currency.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TradeGood {
    #[serde(rename = "symbol")]
    pub symbol: models::TradeSymbol,
    /// The name of the good.
    #[serde(rename = "name")]
    pub name: String,
    /// The description of the good.
    #[serde(rename = "description")]
    pub description: String,
}

impl TradeGood {
    /// A good that can be traded for other goods or currency.
    pub fn new(symbol: models::TradeSymbol, name: String, description: String) -> TradeGood {
        TradeGood {
            symbol,
            name,
            description,
        }
    }
}

