/*
 * SpaceTraders API
 *
 * SpaceTraders is an open-universe game and learning platform that offers a set of HTTP endpoints to control a fleet of ships and explore a multiplayer universe.  The API is documented using [OpenAPI](https://github.com/SpaceTradersAPI/api-docs). You can send your first request right here in your browser to check the status of the game server.  ```json http {   \"method\": \"GET\",   \"url\": \"https://api.spacetraders.io/v2\", } ```  Unlike a traditional game, SpaceTraders does not have a first-party client or app to play the game. Instead, you can use the API to build your own client, write a script to automate your ships, or try an app built by the community.  We have a [Discord channel](https://discord.com/invite/jh6zurdWk5) where you can share your projects, ask questions, and get help from other players.   
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: joel@spacetraders.io
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ShipCargo : Ship cargo details.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ShipCargo {
    /// The max number of items that can be stored in the cargo hold.
    #[serde(rename = "capacity")]
    pub capacity: i32,
    /// The number of items currently stored in the cargo hold.
    #[serde(rename = "units")]
    pub units: i32,
    /// The items currently in the cargo hold.
    #[serde(rename = "inventory")]
    pub inventory: Vec<models::ShipCargoItem>,
}

impl ShipCargo {
    /// Ship cargo details.
    pub fn new(capacity: i32, units: i32, inventory: Vec<models::ShipCargoItem>) -> ShipCargo {
        ShipCargo {
            capacity,
            units,
            inventory,
        }
    }
}

